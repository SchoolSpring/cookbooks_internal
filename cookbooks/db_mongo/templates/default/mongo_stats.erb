#!/usr/bin/env ruby
require 'getoptlong'

# The name of the collectd plugin, something like apache, memory, mysql, interface, ...
PLUGIN_NAME = 'mongodb-stats'

def usage
  puts("#{$0} -h <host_id> [-i <sampling_interval>]")
  exit
end

# Main
begin
  # Sync stdout so that it will flush to collectd properly.
  $stdout.sync = true

  # Parse command line options
  hostname = nil
  sampling_interval = 20 # sec, Default value
  opts = GetoptLong.new(
    [ '--hostid', '-h', GetoptLong::REQUIRED_ARGUMENT ],
    [ '--sampling-interval', '-i', GetoptLong::OPTIONAL_ARGUMENT ]
  )
  opts.each do |opt, arg|
    case opt
      when '--hostid'
        hostname = arg
      when '--sampling-interval'
        sampling_interval = arg.to_i
    end
  end
  usage if !hostname




  # Collection loop
  while true do
    start_run = Time.now.to_i
    next_run = start_run + sampling_interval

    # collectd data and print the values
    inserts = `mongostat --rowcount 1 --noheaders|grep -v connected|awk -F " " '{print $1}'|sed s/*//g`
    puts("PUTVAL #{hostname}/#{PLUGIN_NAME}/gauge-5_mongo_inserts #{start_run}:#{inserts}")
  
    queries = `mongostat --rowcount 1 --noheaders|grep -v connected|awk -F " " '{print $2}'|sed s/*//g`
    puts("PUTVAL #{hostname}/#{PLUGIN_NAME}/gauge-5_mongo_queries #{start_run}:#{queries}")
   
    updates = `mongostat --rowcount 1 --noheaders|grep -v connected|awk -F " " '{print $3}'|sed s/*//g`
    puts("PUTVAL #{hostname}/#{PLUGIN_NAME}/gauge-5_mongo_updates #{start_run}:#{updates}")

    deletes =`mongostat --rowcount 1 --noheaders|grep -v connected|awk -F " " '{print $4}'|sed s/*//g`
    puts("PUTVAL #{hostname}/#{PLUGIN_NAME}/gauge-5_mongo_deletes #{start_run}:#{deletes}")

    # sleep to make the interval
    while((time_left = (next_run - Time.now.to_i)) > 0) do
      sleep(time_left)
    end
  end
end

